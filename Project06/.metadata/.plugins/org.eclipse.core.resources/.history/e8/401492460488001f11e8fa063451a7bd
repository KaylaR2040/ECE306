
//===========================================================================
// File Name : ports.c
//
// Description: This file contains the Initialization for all port pins
//
// Author: Kayla Radu
// Date: Sept 12, 2024
// Compiler: Built with Code Composer Studio Version: 12.8.0.00012
//===========================================================================

#include  "msp430.h"
#include  <string.h>
#include  "functions.h"
#include  "LCD.h"
#include  "ports.h"
#include "macros.h"

// Does all init ports and runs them
void Init_Ports(void){
    Init_Port1();
    Init_Port2();
    Init_Port3();
    Init_Port4();
    Init_Port5();
    Init_Port6();

}


// Init port 1 set up with all 7 of the pins. This is done for control of the lights
void Init_Port1(void){ //Configure Port 1
    P1SEL0 &= ~RED_LED;
    P1SEL1 &= ~RED_LED;
    P1OUT  &= ~RED_LED;
    P1DIR  |= RED_LED;

    P1SEL0 &= ~A1_SEEED;
    P1SEL1 &= ~A1_SEEED;
    P1OUT  &= ~A1_SEEED;
    P1DIR  |= A1_SEEED;

    P1SEL0 &= ~V_DETECT_L;
    P1SEL1 &= ~V_DETECT_L;
    P1OUT  &= ~V_DETECT_L;
    P1DIR  |= V_DETECT_L;

    P1SEL0 &= ~V_DETECT_R;
    P1SEL1 &= ~V_DETECT_R;
    P1OUT  &= ~V_DETECT_R;
    P1DIR  |= V_DETECT_R;

    P1SEL0 &= ~A4_SEEED;
    P1SEL1 &= ~A4_SEEED;
    P1OUT  &= ~A4_SEEED;
    P1DIR  |= A4_SEEED;

    P1SEL0 &= ~V_THUMB;
    P1SEL1 &= ~V_THUMB;
    P1OUT  &= ~V_THUMB;
    P1DIR  |= V_THUMB;

    P1SEL0 &= ~UCA0TXD;
    P1SEL1 &= ~UCA0TXD;
    P1OUT  &= ~UCA0TXD;
    P1DIR  |= UCA0TXD;

}




// Init port 2 set up with all 8 of the pins, this is done for the control of Switch 2 which is the button.
void Init_Port2(void){ // Configure Port 2
//------------------------------------------------------------------------------
P2OUT = 0x00; // P2 set Low
P2DIR = 0x00; // Set P2 direction to output

P2SEL0 &= ~SLOW_CLK; // SLOW_CLK GPIO operation
P2SEL1 &= ~SLOW_CLK; // SLOW_CLK GPIO operation
P2OUT &= ~SLOW_CLK; // Initial Value = Low / Off
P2DIR |= SLOW_CLK; // Direction = output

P2SEL0 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
P2SEL1 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
P2OUT &= ~CHECK_BAT; // Initial Value = Low / Off
P2DIR |= CHECK_BAT; // Direction = output

P2SEL0 &= ~IR_LED; // P2_2 GPIO operation
P2SEL1 &= ~IR_LED; // P2_2 GPIO operation
P2OUT &= ~IR_LED; // Initial Value = Low / Off
P2DIR |= IR_LED; // Direction = input

P2SEL0 &= ~SW2; // SW2 Operation
P2SEL1 &= ~SW2; // SW2 Operation
P2OUT |= SW2; // Configure pullup resistor
P2DIR &= ~SW2; // Direction = input
P2REN |= SW2; // Enable pullup resistor

P2SEL0 &= ~IOT_RUN_CPU; // IOT_RUN_CPU GPIO operation
P2SEL1 &= ~IOT_RUN_CPU; // IOT_RUN_CPU GPIO operation
P2OUT &= ~IOT_RUN_CPU; // Initial Value = Low / Off
P2DIR |= IOT_RUN_CPU; // Direction = input

P2SEL0 &= ~DAC_ENB; // DAC_ENB GPIO operation
P2SEL1 &= ~DAC_ENB; // DAC_ENB GPIO operation
P2OUT |= DAC_ENB; // Initial Value = High
P2DIR |= DAC_ENB; // Direction = output

P2SEL0 &= ~LFXOUT; // LFXOUT Clock operation
P2SEL1 |= LFXOUT; // LFXOUT Clock operation

P2SEL0 &= ~LFXIN; // LFXIN Clock operation
P2SEL1 |= LFXIN; // LFXIN Clock operation
//------------------------------------------------------------------------------
}

// Initilization for the 3rd port for setting it to low/high
void Init_Port3(void){ //Configure Port 3

    P3SEL0 &= ~TEST_PROBE;
    P3SEL1 &= ~TEST_PROBE;
    P3OUT  &= ~TEST_PROBE;
    P3DIR  |= TEST_PROBE;

    P3SEL0 &= ~OA20;
    P3SEL1 &= ~OA20;
    P3OUT  &= ~OA20;
    P3DIR  |= OA20;

    P3SEL0 &= ~OA2N;
    P3SEL1 &= ~OA2N;
    P3OUT  &= ~OA2N;
    P3DIR  |= OA2N;

    P3SEL0 &= ~SMCLK_OUT;
    P3SEL1 &= ~SMCLK_OUT;
    P3OUT  &= ~SMCLK_OUT;
    P3DIR  |= SMCLK_OUT;

    P3SEL0 &= ~DAC_CTRL;
    P3SEL1 &= ~DAC_CTRL;
    P3OUT  &= ~DAC_CTRL;
    P3DIR  |= DAC_CTRL;

    P3SEL0 &= ~IOT_LINK_CPU;
    P3SEL1 &= ~IOT_LINK_CPU;
    P3OUT  &= ~IOT_LINK_CPU;
    P3DIR  |= IOT_LINK_CPU;

    P3SEL0 &= ~IOT_RN_CPU;
    P3SEL1 &= ~IOT_RN_CPU;
    P3OUT  &= ~IOT_RN_CPU;
    P3DIR  |= IOT_RN_CPU;

}

// Initilization for the 3rd port for setting it to low/high and for switch 1
void Init_Port4(void){ // Configure PORT 4
//------------------------------------------------------------------------------
P4OUT = 0x00; // P4 set Low
P4DIR = 0x00; // Set P4 direction to output

P4SEL0 &= ~SW1; // SW1 set as I/0
P4SEL1 &= ~SW1; // SW1 set as I/0
P4DIR &= ~SW1; // SW1 Direction = input
P4PUD |= SW1; // Configure pull-up resistor SW1
P4REN |= SW1; // Enable pull-up resistor SW1
P4IES |= SW1; // SW1 Hi/Lo edge interrupt
P4IFG &= ~SW1; // IFG SW1 cleared
P4IE |= SW1; // SW1 interrupt Enabled

P4SEL0 &= ~SW2; // SW1 set as I/0
P4SEL1 &= ~SW2; // SW1 set as I/0
P4DIR &= ~SW2; // SW1 Direction = input
P4PUD |= SW2; // Configure pull-up resistor SW1
P4REN |= SW2; // Enable pull-up resistor SW1
P4IES |= SW2; // SW1 Hi/Lo edge interrupt
P4IFG &= ~SW2; // IFG SW1 cleared
P4IE |= SW2; // SW1 interrupt Enabled


P4SEL0 &= ~RESET_LCD; // RESET_LCD GPIO operation
P4SEL1 &= ~RESET_LCD; // RESET_LCD GPIO operation
P4OUT &= ~RESET_LCD; // Initial Value = Low / Off
P4DIR |= RESET_LCD; // Direction = output

P4SEL0 |= UCA1RXD; // USCI_A1 UART operation
P4SEL1 &= ~UCA1RXD; // USCI_A1 UART operation

P4SEL0 |= UCA1TXD; // USCI_A1 UART operation
P4SEL1 &= ~UCA1TXD; // USCI_A1 UART operation

P4SEL0 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
P4SEL1 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
P4OUT |= UCB1_CS_LCD; // Set SPI_CS_LCD Off [High]
P4DIR |= UCB1_CS_LCD; // Set SPI_CS_LCD direction to output

P4SEL0 |= UCB1CLK; // UCB1CLK SPI BUS operation
P4SEL1 &= ~UCB1CLK; // UCB1CLK SPI BUS operation

P4SEL0 |= UCB1SIMO; // UCB1SIMO SPI BUS operation
P4SEL1 &= ~UCB1SIMO; // UCB1SIMO SPI BUS operation
P4SEL0 |= UCB1SOMI; // UCB1SOMI SPI BUS operation
P4SEL1 &= ~UCB1SOMI; // UCB1SOMI SPI BUS operation
//------------------------------------------------------------------------------
}
//--------------------------------------------------------------------


// The initilization of port 5 by setting the values to low/ high depending on the drawings.
void Init_Port5(void){ //Configure Port 5
//------------------------------------------------------------------------------
    P5SEL0 &= ~V_BAT;
    P5SEL1 &= ~V_BAT;
    P5OUT  &= ~V_BAT;
    P5DIR  |= V_BAT;

    P5SEL0 &= ~V_5;
    P5SEL1 &= ~V_5;
    P5OUT  &= ~V_5;
    P5DIR  |= V_5;

    P5SEL0 &= ~CV_DAC;
    P5SEL1 &= ~CV_DAC;
    P5OUT  &= ~CV_DAC;
    P5DIR  |= CV_DAC;

    P5SEL0 &= ~V3_3;
    P5SEL1 &= ~V3_3;
    P5OUT  &= ~V3_3;
    P5DIR  |= V3_3;

    P5SEL0 &= ~IOT_BOOT_CPU;
    P5SEL1 &= ~IOT_BOOT_CPU;
    P5OUT  &= ~IOT_BOOT_CPU;
    P5DIR  |= IOT_BOOT_CPU;


}

// The initilization of port 5 by setting the values to low/ high depending on the drawings.
void Init_Port6(void){ //Configure Port 6

    P6SEL0 &= ~LCD_BACKLITE;
    P6SEL1 &= ~LCD_BACKLITE;
    P6OUT  &= ~LCD_BACKLITE;
    P6DIR  |= LCD_BACKLITE;

    P6SEL0 &= ~R_FORWARD;
    P6SEL1 &= ~R_FORWARD;
    P6OUT  &= ~R_FORWARD;
    P6DIR  |= R_FORWARD;

    P6SEL0 &= ~L_FORWARD;
    P6SEL1 &= ~L_FORWARD;
    P6OUT  &= ~L_FORWARD;
    P6DIR  |= L_FORWARD;

    P6SEL0 &= ~R_REVERSE;
    P6SEL1 &= ~R_REVERSE;
    P6OUT  &= ~R_REVERSE;
    P6DIR  |= R_REVERSE;

    P6SEL0 &= ~L_REVERSE;
    P6SEL1 &= ~L_REVERSE;
    P6OUT  &= ~L_REVERSE;
    P6DIR  |= L_REVERSE;

    P6SEL0 &= ~P6_5;
    P6SEL1 &= ~P6_5;
    P6OUT  &= ~P6_5;
    P6DIR  |= P6_5;

    P6SEL0 &= ~GRN_LED;
    P6SEL1 &= ~GRN_LED;
    P6OUT  &= ~GRN_LED;
    P6DIR  |= GRN_LED;

}
