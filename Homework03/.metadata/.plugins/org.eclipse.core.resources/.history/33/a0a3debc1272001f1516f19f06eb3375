
//===========================================================================
// File Name : ports.c
//
// Description: This file contains the Initialization for all port pins
//
// Author: Kayla Radu
// Date: Sept 12, 2024
// Compiler: Built with Code Composer Studio Version: 12.8.0.00012
//===========================================================================


// Port 1 Pins
#define RED_LED (0x01) // 0 RED LED 0
#define A1_SEEED (0x02) // 1 A1_SEEED
#define V_DETECT_L (0x04) // 2 V_DETECT_L
#define V_DETECT_R (0x08) // 3 V_DETECT_R
#define A4_SEEED (0x10) // 4 A4_SEEED
#define V_THUMB (0x20) // 5 V_THUMB
#define UCA0TXD (0x40) // 6 Back Channel UCA0TXD
#define UCA0RXD (0x80) // 7 Back Channel UCA0RXD



// Port 2 Pins
#define SLOW_CLK (0x01) // 0 SLOW_CLK
#define CHECK_BAT (0x02) // 1 Check ADC Voltages
#define IR_LED (0x04) // 2 IR_LED
#define SW2 (0x08) // 3 SW2
#define IOT_RUN_CPU (0x10) // 4 IOT_RUN_CPU
#define DAC_ENB (0x20) // 5 DAC_ENB
#define LFXOUT (0x40) // 6 XOUTR
#define LFXIN (0x80) // 7 XINR

// Port 3 Pins
#define TEST_PROBE (0x01) // 0 TEST PROBE
#define OA2O (0x02) // 1 OA2O
#define OA2N (0x04) // 2 OA2N
#define OA2P (0x08) // 3 OA2P
#define SMCLK_OUT (0x10) // 4 SMCLK_OUT
#define DAC_CTRL (0x20) // 5 DAC_CTRL signal from Processor
#define IOT_LINK_CPU (0x40) // 6 IOT_LINK_CPU
#define IOT_RN_CPU (0x80) // 7 IOT_RN_CPU

// Port 4 Pins
#define RESET_LCD (0x01) // 0 RESET_LCD
#define SW1 (0x02) // 1 SW1
#define UCA1RXD (0x04) // 2 Back Channel UCA1RXD
#define UCA1TXD (0x08) // 3 Back Channel UCA1TXD
#define UCB1_CS_LCD (0x10) // 4 Chip Select
#define UCB1CLK (0x20) // 5 SPI mode - clock outputâ€”UCB1CLK
#define UCB1SIMO (0x40) // 6 UCB1SIMO
#define UCB1SOMI (0x80) // 7 UCB1SOMI

// Port 5 Pins
#define V_BAT (0x01) // 0  V_BAT
#define V_5 (0x02) // 1 V_5
#define CV_DAC (0x04) // 2 CV_DAC
#define V3_3 (0x08) // 3 V3_3
#define IOT_BOOT_CPU (0x10) // 4 IOT_BOOT_CPU

// Port 4 Pins
#define LCD_BACKLITE (0x01) // 0 LCD_BACKLITE
#define R_FORWARD (0x02) // 1 R_FORWARD
#define L_FORWARD (0x04) // 2 L_FORWARD
#define R_REVERSE (0x08) // 3 R_REVERSE
#define L_REVERSE (0x10) // 4 L_REVERSE
#define P6_5 (0x20) // 5 P6_5
#define GRN_LED (0x40) // 6 GRN_LED



void Init_Port1(void){ //Configure Port 1
    P1SEL0 &= ~RED_LED;
    P1SEL1 &= ~RED_LED;
    P1OUT  &= ~RED_LED;
    P1DIR  |= RED_LED;

    P1SEL0 &= ~A1_SEEED;
    P1SEL1 &= ~A1_SEEED;
    P1OUT  &= ~A1_SEEED;
    P1DIR  |= A1_SEEED;

    P1SEL0 &= ~V_DETECT_L;
    P1SEL1 &= ~V_DETECT_L;
    P1OUT  &= ~V_DETECT_L;
    P1DIR  |= V_DETECT_L;

    P1SEL0 &= ~V_DETECT_R;
    P1SEL1 &= ~V_DETECT_R;
    P1OUT  &= ~V_DETECT_R;
    P1DIR  |= V_DETECT_R;

    P1SEL0 &= ~A4_SEEED;
    P1SEL1 &= ~A4_SEEED;
    P1OUT  &= ~A4_SEEED;
    P1DIR  |= A4_SEEED;

    P1SEL0 &= ~V_THUMB;
    P1SEL1 &= ~V_THUMB;
    P1OUT  &= ~V_THUMB;
    P1DIR  |= V_THUMB;

    P1SEL0 &= ~UCA0TXD;
    P1SEL1 &= ~UCA0TXD;
    P1OUT  &= ~UCA0TXD;
    P1DIR  |= UCA0TXD;

}





void Init_Port2(void){ // Configure Port 2
//------------------------------------------------------------------------------
P2OUT = 0x00; // P2 set Low
P2DIR = 0x00; // Set P2 direction to output
P2SEL0 &= ~SLOW_CLK; // SLOW_CLK GPIO operation
P2SEL1 &= ~SLOW_CLK; // SLOW_CLK GPIO operation
P2OUT &= ~SLOW_CLK; // Initial Value = Low / Off
P2DIR |= SLOW_CLK; // Direction = output
P2SEL0 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
P2SEL1 &= ~CHECK_BAT; // CHECK_BAT GPIO operation
P2OUT &= ~CHECK_BAT; // Initial Value = Low / Off
P2DIR |= CHECK_BAT; // Direction = output
P2SEL0 &= ~IR_LED; // P2_2 GPIO operation
P2SEL1 &= ~IR_LED; // P2_2 GPIO operation
P2OUT &= ~IR_LED; // Initial Value = Low / Off
P2DIR |= IR_LED; // Direction = input
P2SEL0 &= ~SW2; // SW2 Operation
P2SEL1 &= ~SW2; // SW2 Operation
P2OUT |= SW2; // Configure pullup resistor
P2DIR &= ~SW2; // Direction = input
P2REN |= SW2; // Enable pullup resistor
P2SEL0 &= ~IOT_RUN_CPU; // IOT_RUN_CPU GPIO operation
P2SEL1 &= ~IOT_RUN_CPU; // IOT_RUN_CPU GPIO operation
P2OUT &= ~IOT_RUN_CPU; // Initial Value = Low / Off
P2DIR |= IOT_RUN_CPU; // Direction = input
P2SEL0 &= ~DAC_ENB; // DAC_ENB GPIO operation
P2SEL1 &= ~DAC_ENB; // DAC_ENB GPIO operation
P2OUT |= DAC_ENB; // Initial Value = High
P2DIR |= DAC_ENB; // Direction = output
P2SEL0 &= ~LFXOUT; // LFXOUT Clock operation
P2SEL1 |= LFXOUT; // LFXOUT Clock operation
P2SEL0 &= ~LFXIN; // LFXIN Clock operation
P2SEL1 |= LFXIN; // LFXIN Clock operation
//------------------------------------------------------------------------------
}

void Init_Port3(void){ //Configure Port 3

    P3SEL0 &= ~TEST_PROBE;
    P3SEL1 &= ~TEST_PROBE;
    P3OUT  &= ~TEST_PROBE;
    P3DIR  |= TEST_PROBE;

    P3SEL0 &= ~OA20;
    P3SEL1 &= ~OA20;
    P3OUT  &= ~OA20;
    P3DIR  |= OA20;

    P3SEL0 &= ~OA2N;
    P3SEL1 &= ~OA2N;
    P3OUT  &= ~OA2N;
    P3DIR  |= OA2N;

    P3SEL0 &= ~SMCLK_OUT;
    P3SEL1 &= ~SMCLK_OUT;
    P3OUT  &= ~SMCLK_OUT;
    P3DIR  |= SMCLK_OUT;

    P3SEL0 &= ~DAC_CTRL;
    P3SEL1 &= ~DAC_CTRL;
    P3OUT  &= ~DAC_CTRL;
    P3DIR  |= DAC_CTRL;

    P3SEL0 &= ~IOT_LINK_CPU;
    P3SEL1 &= ~IOT_LINK_CPU;
    P3OUT  &= ~IOT_LINK_CPU;
    P3DIR  |= IOT_LINK_CPU;

    P3SEL0 &= ~IOT_RN_CPU;
    P3SEL1 &= ~IOT_RN_CPU;
    P3OUT  &= ~IOT_RN_CPU;
    P3DIR  |= IOT_RN_CPU;

}


void Init_Port4(void){ // Configure PORT 4
//------------------------------------------------------------------------------
P4OUT = 0x00; // P4 set Low
P4DIR = 0x00; // Set P4 direction to output
P4SEL0 &= ~RESET_LCD; // RESET_LCD GPIO operation
P4SEL1 &= ~RESET_LCD; // RESET_LCD GPIO operation
P4OUT &= ~RESET_LCD; // Initial Value = Low / Off
P4DIR |= RESET_LCD; // Direction = output
P4SEL0 &= ~SW1; // SW1 GPIO operation
P4SEL1 &= ~SW1; // SW1 GPIO operation
P4DIR &= ~SW1; // Direction = input
P4SEL0 |= UCA1TXD; // USCI_A1 UART operation
P4SEL1 &= ~UCA1TXD; // USCI_A1 UART operation
P4SEL0 |= UCA1RXD; // USCI_A1 UART operation
P4SEL1 &= ~UCA1RXD; // USCI_A1 UART operation
P4SEL0 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
P4SEL1 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
P4OUT |= UCB1_CS_LCD; // Set SPI_CS_LCD Off [High]
P4DIR |= UCB1_CS_LCD; // Set SPI_CS_LCD direction to output
P4SEL0 |= UCB1CLK; // UCB1CLK SPI BUS operation
P4SEL1 &= ~UCB1CLK; // UCB1CLK SPI BUS operation
P4SEL0 |= UCB1SIMO; // UCB1SIMO SPI BUS operation
P4SEL1 &= ~UCB1SIMO; // UCB1SIMO SPI BUS operation
P4SEL0 |= UCB1SOMI; // UCB1SOMI SPI BUS operation
P4SEL1 &= ~UCB1SOMI; // UCB1SOMI SPI BUS operation
//------------------------------------------------------------------------------
}

void Init_Port5(void){ //Configure Port 5

    P5SEL0 &= ~V_BAT;
    P5SEL1 &= ~V_BAT;
    P5OUT  &= ~V_BAT;
    P5DIR  |= V_BAT;

    P5SEL0 &= ~V_5;
    P5SEL1 &= ~V_5;
    P5OUT  &= ~V_5;
    P5DIR  |= V_5;

    P5SEL0 &= ~CV_DAC;
    P5SEL1 &= ~CV_DAC;
    P5OUT  &= ~CV_DAC;
    P5DIR  |= CV_DAC;

    P5SEL0 &= ~V3_3;
    P5SEL1 &= ~V3_3;
    P5OUT  &= ~V3_3;
    P5DIR  |= V3_3;

    P5SEL0 &= ~IOT_BOOT_CPU;
    P5SEL1 &= ~IOT_BOOT_CPU;
    P5OUT  &= ~IOT_BOOT_CPU;
    P5DIR  |= IOT_BOOT_CPU;


}


void Init_Port6(void){ //Configure Port 6

    P6SEL0 &= ~LCD_BACKLITE;
    P6SEL1 &= ~LCD_BACKLITE;
    P6OUT  &= ~LCD_BACKLITE;
    P6DIR  |= LCD_BACKLITE;

    P6SEL0 &= ~R_FORWARD;
    P6SEL1 &= ~R_FORWARD;
    P6OUT  &= ~R_FORWARD;
    P6DIR  |= R_FORWARD;

    P6SEL0 &= ~L_FORWARD;
    P6SEL1 &= ~L_FORWARD;
    P6OUT  &= ~L_FORWARD;
    P6DIR  |= L_FORWARD;

    P6SEL0 &= ~R_REVERSE;
    P6SEL1 &= ~R_REVERSE;
    P6OUT  &= ~R_REVERSE;
    P6DIR  |= R_REVERSE;

    P6SEL0 &= ~L_REVERSE;
    P6SEL1 &= ~L_REVERSE;
    P6OUT  &= ~L_REVERSE;
    P6DIR  |= L_REVERSE;

    P6SEL0 &= ~P6_5;
    P6SEL1 &= ~P6_5;
    P6OUT  &= ~P6_5;
    P6DIR  |= P6_5;

    P6SEL0 &= ~GRN_LED;
    P6SEL1 &= ~GRN_LED;
    P6OUT  &= ~GRN_LED;
    P6DIR  |= GRN_LED;

}
